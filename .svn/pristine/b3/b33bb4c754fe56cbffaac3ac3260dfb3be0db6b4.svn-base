import * as React from "react";
import { Select, Text } from "@fluentui/react-components";
import type { SelectProps } from "@fluentui/react-components";

interface Option {
  option_label: string;
  value: string;
}

interface Field {
  field_id: string;
  field_label: string;
  field_mandatory: string;
  field_options: Option[];
  field_placeholder:string;
  field_default_value:string;
  field_error_msg_required: string;
}

interface SelectElementProps extends SelectProps {
  field: Field;
}

const SelectElement: React.FC<SelectElementProps> = ({ field, ...props }) => {
  const [selectedValue, setSelectedValue] = React.useState("");
  const [error, setError] = React.useState("");

  const validateField = (value: string) => {
    if (field.field_mandatory === "yes" && !value) {
      setError(field.field_error_msg_required || "Please select an option");
    } else {
      setError("");
    }
  };

  return (
   
    <div style={{display:"flex", flexDirection:"column"}}>
      
      <label htmlFor={field.field_id}>{field.field_label}</label>
      <Select
        id={field.field_id}
        required={field.field_mandatory === "yes"}
        {...props}
        defaultValue={field.field_default_value}
        
        onChange={(e) => {
          setSelectedValue(e.target.value);
          // validateField(e.target.value);
        }}
        onBlur={(e)=>{
          validateField(e.target.value)
        }}
        
      >
        <option value="" disabled>{field.field_placeholder}</option>
        {field.field_options.map((option) => (
          <option key={option.value} value={option.value}>
            {option.option_label}
          </option>
        ))}
      </Select>
     
      {error && <Text style={{ color: "red", fontSize: "12px" }}>{error}</Text>}
    </div>
   
  );
};

export default SelectElement;
