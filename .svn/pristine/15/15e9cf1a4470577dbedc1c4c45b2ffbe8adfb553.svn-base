import * as React from "react";
import { Combobox, Option, Tag, Input, Button } from "@fluentui/react-components";
import type { ComboboxProps } from "@fluentui/react-components";

interface OptionType {
  option_label: string;
  value: string;
}

interface Field {
  field_id: string;
  field_label: string;
  field_value: string;
  field_placeholder: string;
  field_mandatory:string
  field_options: OptionType[];
}

interface SelectElementProps extends ComboboxProps {
  field: Field;
}

const SearchableSelect: React.FC<SelectElementProps> = ({ field, ...props }) => {
  const [searchTerm, setSearchTerm] = React.useState("");
  const [filteredOptions, setFilteredOptions] = React.useState(field.field_options);

 const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {
     const search = event.target.value.toLowerCase();
     setSearchTerm(search);
 
     const newOptions = field.field_options.filter((option) =>
       option.option_label.toLowerCase().includes(search)
     );
 
     setFilteredOptions(newOptions);
   };


  return (
    <>
      <label htmlFor={field.field_id}>{field.field_label}</label>
      <Combobox
      required={field.field_mandatory === 'yes'}
        id={field.field_id}
        {...props}
        onInput={handleInputChange}
        placeholder={field.field_placeholder}
      >
        {filteredOptions.map((option) => (
          <Option key={option.value} value={option.value}>
            {option.option_label}
          </Option>
        ))}
      </Combobox>
    </>
  );
};

export default SearchableSelect;
