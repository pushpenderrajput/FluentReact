import * as React from "react";
import {Input, Label, Text } from "@fluentui/react-components";
import { validateField } from "../utils/validations";

interface Field {
  field_id: string;
  field_label: string;
  field_placeholder: string;
  field_type: string;
}

interface InputElementProps {
  fields: Field[];
}



const InputElement: React.FC<InputElementProps> = ({ fields }) => {

  const [errors, setErrors] =  React.useState(""); 

  const handleBlur = (field: Field, value: string) => {
       const errorMessage = validateField(field, value);
       setErrors(errorMessage);
     };
  

  return (
    <div>
      {fields.map((field) => (
        <div key={field.field_id} style={{ display: "flex", flexDirection: "column" }}>
          <Label htmlFor={field.field_id}>{field.field_label}</Label>
          <Input
            id={field.field_id}
            placeholder={field.field_placeholder}
            type={field.field_type as "number" | "search" | "time" | "text" | "tel" | "url" | "email" | "date" | "password" | "datetime-local" | "month" | "week"} // type cast
            onBlur={(e) => handleBlur(field, e.target.value)}
          />
           {errors && <span style={{ color: "red", fontSize: "12px" }}>{errors}</span>}
        </div>
      ))}
    </div>
  );
};

export default InputElement;